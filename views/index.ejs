<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
        }
        .container {
            max-width: 600px;
            margin-top: 50px;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #007bff;
        }
        .btn-custom {
            background-color: #007bff;
            color: white;
            width: 100%;
        }
        #camera, #capturedImagePreview {
            width: 100%;
            max-width: 500px;
            border: 2px solid #007bff;
            border-radius: 8px;
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/">Image Upload App</a>
        </div>
    </nav>

    <div class="container">
        <h1>Upload an Image</h1>
        <form action="/upload" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="image">Select Image:</label>
                <input type="file" class="form-control" name="image" id="image" accept="image/*">
            </div>

            <div id="camera-container">
                <label for="camera">Capture with Camera:</label>
                <video id="camera" autoplay></video>
                <button type="button" id="capture" class="btn btn-success mt-2">Capture Photo</button>
                <button type="button" id="switchCamera" class="btn btn-secondary mt-2">Switch Camera</button>
                <canvas id="canvas" style="display: none;"></canvas>
                <img id="capturedImagePreview" class="mt-3" style="display: none;" alt="Captured Image">
                <input type="hidden" name="capturedImage" id="capturedImage">
            </div>

            <button type="submit" class="btn btn-custom mt-3">Upload</button>
        </form>
        <a href="/gallery" class="link mt-3 d-block text-center">View Gallery</a>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <script>
        const videoElement = document.getElementById('camera');
        const captureButton = document.getElementById('capture');
        const switchCameraButton = document.getElementById('switchCamera');
        const capturedImageInput = document.getElementById('capturedImage');
        const capturedImagePreview = document.getElementById('capturedImagePreview');
        const canvas = document.getElementById('canvas');

        let currentStream = null;
        let useFrontCamera = true;

        // Function to start the camera stream
        async function startCamera() {
            if (currentStream) {
                currentStream.getTracks().forEach(track => track.stop());
            }

            const constraints = {
                video: { 
                    facingMode: useFrontCamera ? 'user' : 'environment'
                }
            };

            try {
                currentStream = await navigator.mediaDevices.getUserMedia(constraints);
                videoElement.srcObject = currentStream;
            } catch (error) {
                console.error('Error accessing camera:', error);
            }
        }

        // Switch Camera Functionality
        switchCameraButton.addEventListener('click', () => {
            useFrontCamera = !useFrontCamera; // Toggle camera
            startCamera();
        });

        // Capture Image Functionality
        captureButton.addEventListener('click', () => {
            canvas.width = videoElement.videoWidth;
            canvas.height = videoElement.videoHeight;
            canvas.getContext('2d').drawImage(videoElement, 0, 0, canvas.width, canvas.height);

            const imageDataUrl = canvas.toDataURL('image/png');
            capturedImageInput.value = imageDataUrl; // Set hidden input value
            capturedImagePreview.src = imageDataUrl; // Show preview
            capturedImagePreview.style.display = 'block';
        });

        // Start the default camera on page load
        startCamera();
    </script>
</body>
</html>
