<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
    <!-- Link to Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom CSS for further styling -->
    <style>
      body {
        background-color: #f8f9fa;
      }
      .container {
        max-width: 600px;
        margin-top: 50px;
        padding: 20px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      h1 {
        text-align: center;
        color: #007bff;
      }
      .form-group {
        margin-bottom: 1rem;
      }
      .btn-custom {
        background-color: #007bff;
        color: white;
        width: 100%;
      }
      .btn-custom:hover {
        background-color: #0056b3;
      }
      .link {
        text-align: center;
        display: block;
        margin-top: 10px;
      }
      #camera-container {
        text-align: center;
        margin-top: 20px;
      }
      #camera {
        width: 100%;
        max-width: 500px;
        height: auto;
        border: 2px solid #007bff;
        border-radius: 8px;
      }
      #capture {
        margin-top: 10px;
        background-color: #28a745;
        color: white;
        width: 100%;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Upload an Image</h1>
      <form action="/upload" method="post" enctype="multipart/form-data">
        <!-- File upload option -->
        <div class="form-group">
          <label for="image">Select Image:</label>
          <input type="file" class="form-control" name="image" id="image" accept="image/*">
        </div>

        <!-- Camera option -->
        <div id="camera-container">
          <label for="camera">Capture with Camera:</label>
          <video id="camera" autoplay></video>
          <br>
          <button type="button" id="capture" class="btn btn-custom">Capture Photo</button>
          <input type="hidden" name="capturedImage" id="capturedImage">
        </div>

        <button type="submit" class="btn btn-custom mt-3">Upload</button>
      </form>

      <a href="/gallery" class="link">View Gallery</a>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <script>
      // Access the user's camera using getUserMedia
      const videoElement = document.getElementById('camera');
      const captureButton = document.getElementById('capture');
      const capturedImageInput = document.getElementById('capturedImage');

      // Start the camera
      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices.getUserMedia({ video: true })
          .then(function (stream) {
            videoElement.srcObject = stream;
          })
          .catch(function (error) {
            console.log("Error accessing the camera: ", error);
          });
      } else {
        alert("Camera not supported on this device.");
      }

      // Capture image when the button is clicked
     captureButton.addEventListener('click', function () {
  const canvas = document.createElement('canvas');
  const context = canvas.getContext('2d');
  canvas.width = videoElement.videoWidth;
  canvas.height = videoElement.videoHeight;
  context.drawImage(videoElement, 0, 0, canvas.width, canvas.height);

  // Get the image data URL and set it to the hidden input field
  const imageData = canvas.toDataURL('image/png');
  capturedImageInput.value = imageData;

  // Log the base64 data
  console.log("Captured Image Data: ", imageData);

  // Optional: Stop the video stream after capturing
  const stream = videoElement.srcObject;
  const tracks = stream.getTracks();
  tracks.forEach(track => track.stop());
  videoElement.srcObject = null;
});

    </script>
  </body>
</html>
